{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","props","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","type","className","value","onChange","map","option","BASE_URL","App","toAmount","fromAmount","useState","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","handleErrors","response","ok","Error","statusText","useEffect","fetch","then","res","json","data","firstCurrency","Object","keys","rates","base","console","log","catch","error","e","target","ReactDOM","render","document","getElementById"],"mappings":"yLAEe,SAASA,EAAYC,GACnC,IACCC,EAKGD,EALHC,gBACAC,EAIGF,EAJHE,iBACAC,EAGGH,EAHHG,iBACAC,EAEGJ,EAFHI,eACAC,EACGL,EADHK,OAED,OACC,gCACC,uBAAOC,KAAK,SAASC,UAAU,QAAQC,MAAOH,EAAQI,SAAUL,IAChE,wBAAQI,MAAON,EAAkBO,SAAUN,EAA3C,SACEF,EAAgBS,KAAI,SAAAC,GAAM,OAC1B,wBAAqBH,MAAOG,EAA5B,SAAqCA,GAAxBA,WCXlB,IAAMC,EAAW,uFAuFFC,MArFf,WACE,IAOIC,EAAUC,EAPd,EAA8CC,mBAAS,IAAvD,mBAAOf,EAAP,KAAwBgB,EAAxB,KACA,EAAwCD,qBAAxC,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAAoCH,qBAApC,mBAAOI,EAAP,KAAmBC,EAAnB,KACA,EAAwCL,qBAAxC,mBAAOM,EAAP,KAAqBC,EAArB,KACA,EAA4BP,mBAAS,GAArC,mBAAOX,EAAP,KAAemB,EAAf,KACA,EAAwDR,oBAAS,GAAjE,mBAAOS,EAAP,KAA6BC,EAA7B,KAWA,SAASC,EAAaC,GACpB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,EA0CT,OAtDIH,GACFV,EAAaV,EACbS,EAAWT,EAASiB,IAEpBR,EAAWT,EACXU,EAAaV,EAASiB,GAUxBU,qBAAU,WACRC,MAAMrB,GACHsB,KAAKP,GACLO,MAAM,SAAAC,GAAG,OAAIA,EAAIC,UACjBF,MAAK,SAAAG,GACJ,IAAMC,EAAgBC,OAAOC,KAAKH,EAAKI,OAAO,GAC9CxB,EAAmB,CAACoB,EAAKK,MAAP,mBAAgBH,OAAOC,KAAKH,EAAKI,UACnDtB,EAAgBkB,EAAKK,MACrBrB,EAAciB,GACdf,EAAgBc,EAAKI,MAAMH,SAE9B,IAEHN,qBAAU,WACY,MAAhBd,GAAsC,MAAdE,GAC1Ba,MAAM,GAAD,OAAIrB,EAAJ,iBAAqBM,EAArB,oBAA6CE,IAC/Cc,KAAKP,GACLO,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLM,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIP,GACZd,EAAgBc,EAAKI,MAAMrB,OAE5ByB,OAAM,SAAUC,GACfH,QAAQC,IAAIE,QAGjB,CAAC5B,EAAcE,IAahB,qCACE,yCACA,cAACrB,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBgB,EAClBf,iBAAkB,SAAA4C,GAAC,OAAI5B,EAAgB4B,EAAEC,OAAOxC,QAChDJ,eAjBN,SAAgC2C,GAC9BvB,EAAUuB,EAAEC,OAAOxC,OACnBkB,GAAwB,IAgBpBrB,OAAQU,IAEV,qBAAKR,UAAU,SAAf,eACA,cAACR,EAAD,CACEE,gBAAiBA,EACjBC,iBAAkBkB,EAClBjB,iBAAkB,SAAA4C,GAAC,OAAI1B,EAAc0B,EAAEC,OAAOxC,QAC9CJ,eApBN,SAA8B2C,GAC5BvB,EAAUuB,EAAEC,OAAOxC,OACnBkB,GAAwB,IAmBpBrB,OAAQS,QCvEhBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.93806b92.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow(props) {\r\n const {\r\n  currencyOptions,\r\n  selectedCurrency,\r\n  onChangeCurrency,\r\n  onChangeAmount,\r\n  amount\r\n } = props\r\n return (\r\n  <div>\r\n   <input type=\"number\" className=\"input\" value={amount} onChange={onChangeAmount} />\r\n   <select value={selectedCurrency} onChange={onChangeCurrency}>\r\n    {currencyOptions.map(option => (\r\n     <option key={option} value={option}>{option}</option>\r\n    ))}\r\n   </select>\r\n  </div>\r\n )\r\n}\r\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport CurrencyRow from './CurrencyRow';\n\nconst BASE_URL = 'http://api.exchangeratesapi.io/v1/latest?access_key=24dadb83e611b8401c4ffc2d6a5532c9'\n\nfunction App() {\n  const [currencyOptions, setCurrencyOptions] = useState([])\n  const [fromCurrency, setFromCurrency] = useState()\n  const [toCurrency, setToCurrency] = useState()\n  const [exchangeRate, setExchangeRate] = useState()\n  const [amount, setAmount] = useState(1)\n  const [amountInFromCurrency, setAmountInFromCurrency] = useState(true)\n\n  let toAmount, fromAmount\n  if (amountInFromCurrency) {\n    fromAmount = amount\n    toAmount = amount * exchangeRate\n  } else {\n    toAmount = amount\n    fromAmount = amount / exchangeRate\n  }\n\n  function handleErrors(response) {\n    if (!response.ok) {\n      throw Error(response.statusText);\n    }\n    return response;\n  }\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then(handleErrors)\n      .then((res => res.json()))\n      .then(data => {\n        const firstCurrency = Object.keys(data.rates)[0]\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)])\n        setFromCurrency(data.base)\n        setToCurrency(firstCurrency)\n        setExchangeRate(data.rates[firstCurrency])\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}&base=${fromCurrency}&symbols=${toCurrency}`)\n        .then(handleErrors)\n        .then((res) => res.json())\n        .then((data) => {\n          console.log(toCurrency);\n          console.log(data);\n          setExchangeRate(data.rates[toCurrency]);\n        })\n        .catch(function (error) {\n          console.log(error);\n        });\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(true)\n  }\n\n  function handleToAmountChange(e) {\n    setAmount(e.target.value)\n    setAmountInFromCurrency(false)\n  }\n\n  return (\n    <>\n      <h1>Convert</h1>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={fromCurrency}\n        onChangeCurrency={e => setFromCurrency(e.target.value)}\n        onChangeAmount={handleFromAmountChange}\n        amount={fromAmount}\n      />\n      <div className=\"equals\">=</div>\n      <CurrencyRow\n        currencyOptions={currencyOptions}\n        selectedCurrency={toCurrency}\n        onChangeCurrency={e => setToCurrency(e.target.value)}\n        onChangeAmount={handleToAmountChange}\n        amount={toAmount}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import App from './App';\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}